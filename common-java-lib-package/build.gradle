plugins {
    id 'maven-publish'
    id 'java-library'
}

repositories {
    mavenCentral()
}

ext {
    artifactName = 'common-java-lib-package'
    pullNo = project.hasProperty("pullRequest")? "-" + project.getProperty("pullRequest") : ""
}

configurations {
    zip
}

task packageCommonLib(type: Zip) {
    includeEmptyDirs = true
    def resourceDir = 'src/main/resources/'

    into('/') {
        from "$buildDir/convert/manifest.yaml"
        from "../schemas/trivial-schema.json"
    }

    into('bin/') {
        from "${project.rootDir}/attls/$resourceDir/lib/libzowe-attls.so"
        from "$resourceDir/bin/configure.sh"
    }
}

// save build information to manifest
packageCommonLib.doFirst {
    String manifest = file('src/main/resources/manifest.yaml').text

    def getCommitHash = 'git rev-parse --verify HEAD'.execute()
    def commit_hash = new ByteArrayOutputStream()
    def command_err = new ByteArrayOutputStream()
    getCommitHash.consumeProcessOutput(commit_hash, command_err)
    getCommitHash.waitForOrKill(1000)

    // GITHUB_REF_NAME and GITHUB_RUN_ID are github actions variables https://docs.github.com/en/actions/learn-github-actions/variables#default-environment-variables
    manifest = manifest.replaceAll("\\{\\{build.branch\\}\\}", System.getenv("GITHUB_REF_NAME"))
                       .replaceAll("\\{\\{build.number\\}\\}", System.getenv("GITHUB_RUN_ID"))
                       .replaceAll("\\{\\{build.commitHash\\}\\}", commit_hash.toString().trim())
                       .replaceAll("\\{\\{build.timestamp\\}\\}", (new Date()).getTime().toString())

    def scriptOutputDir = new File("$buildDir/convert/");
    if (!scriptOutputDir.exists()) {
        scriptOutputDir.mkdirs();
    }
    File convertedManifest = new File("$buildDir/convert/manifest.yaml");
    if (convertedManifest.exists()) {
        convertedManifest.delete();
    }
    convertedManifest.createNewFile();
    convertedManifest.write(manifest)
}
artifacts {
    zip packageCommonLib
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            artifact source: packageCommonLib, extension: 'zip'
        }
    }
}

jar {
    enabled false
}
