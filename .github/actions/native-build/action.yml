name: "Build native libraries"
description: "Run the build of the libraries on targeted platform."

inputs:
  versionOverride:
    description: "Value to override existing version with. If empty no override is done."
    required: false
    default: ""
outputs:
  imageVersion:
    description: "Image version to be published"
    value: ${{ steps.output-version.outputs.version }}

runs:
  using: "composite"
  steps:
    - uses: actions/checkout@v3
      with:
        fetch-depth: 0
    - name: install zowe/cli
      run: npm install -g @zowe/cli@6.32.2
    - name: install zowe-api-dev
      run: npm -g install @zowedev/zowe-api-dev

    - name: Build with Gradle
      run: |
        zowe profiles create ssh-profile maristzowe --host ${{ secrets.SSH_MARIST_RACF_HOST }} --port 22 --user ${{ secrets.SSH_MARIST_USERNAME }} --password ${{ secrets.SSH_MARIST_RACF_PASSWORD }}
        zowe profiles create zosmf-profile maristzowe --host ${{ secrets.SSH_MARIST_RACF_HOST }} --port 10443 --user ${{ secrets.SSH_MARIST_USERNAME }} --pass ${{ secrets.SSH_MARIST_RACF_PASSWORD }} --reject-unauthorized false
        ./gradlew :attls:zosbuild
        ./gradlew build
#    -   uses: ./.github/actions/setup
#
#    -   name: Set gradle.properties version
#      # images publish with the version in gradle.properties
#      # if a version is provided, use that version to publish, else use value in gradle.properties
#        if: ${{ inputs.versionOverride != '' }}
#        shell: bash
#        run: sed -i 's/version=.*/version=${{ inputs.versionOverride }}/g' gradle.properties
#
#    -   id: output-version
#        shell: bash
#        run: |
#          version=$(cat gradle.properties | awk '/version=/' | awk -F= '{print$2;}')
#          echo "version=$version" >> $GITHUB_OUTPUT
#
#    -   uses: zowe-actions/shared-actions/prepare-workflow@main